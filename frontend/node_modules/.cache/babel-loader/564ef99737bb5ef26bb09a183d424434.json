{"ast":null,"code":"import _classCallCheck from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jake/code/Shed Studio/frontend/src/app/components/videoThumb.js\";\nimport React from \"react\";\nimport Gallery from \"./gallery\";\n\nvar VideoThumb =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VideoThumb, _React$Component);\n\n  function VideoThumb(props) {\n    var _this;\n\n    _classCallCheck(this, VideoThumb);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VideoThumb).call(this, props));\n    _this.state = {\n      expanded: false,\n      playing: false,\n      height: 100,\n      width: 300\n    };\n    _this.handleThumbnailClicked = _this.handleThumbnailClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(VideoThumb, [{\n    key: \"getScreenDimensions\",\n    value: function getScreenDimensions() {\n      var sh = window.innerHeight;\n      var sw = window.innerWidth;\n      return {\n        height: sh,\n        width: sw\n      };\n    }\n  }, {\n    key: \"handleThumbnailClicked\",\n    value: function handleThumbnailClicked(e) {\n      var _this2 = this;\n\n      var videoHeight;\n      var videoWidth;\n      var style;\n      var video = e.currentTarget;\n\n      if (!this.state.expanded) {\n        var viewportDimensions = this.getScreenDimensions();\n        var mobile = viewportDimensions[\"width\"] <= 418;\n        videoWidth = mobile ? viewportDimensions[\"height\"] : viewportDimensions[\"width\"] * 0.8;\n        videoHeight = mobile ? \"\" : videoWidth / 1.7;\n        style = {\n          position: \"fixed\",\n          top: viewportDimensions,\n          left: \"10vw\",\n          margin: 0,\n          backgroundColor: \"grey\",\n          zIndex: 10000,\n          transform: mobile ? \"rotation(90deg)\" : \"\"\n        };\n      } else {\n        videoWidth = 300;\n        videoHeight = 100;\n        style = {};\n      }\n\n      this.setState(function (preS) {\n        return {\n          expanded: !preS.expanded,\n          playing: !preS.playing,\n          style: style,\n          height: videoHeight,\n          width: videoWidth\n        };\n      }, function () {\n        _this2.state.playing ? video.play() : video.pause();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"column has-shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        className: this.state.expanded ? \"is-overlay\" : \"media\",\n        height: this.state.height,\n        width: this.state.width,\n        style: this.state.style,\n        onClick: function onClick(e) {\n          return _this3.handleThumbnailClicked(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: this.props.src,\n        type: \"video/mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return VideoThumb;\n}(React.Component);\n\nexport { VideoThumb as default };","map":{"version":3,"sources":["/Users/jake/code/Shed Studio/frontend/src/app/components/videoThumb.js"],"names":["React","Gallery","VideoThumb","props","state","expanded","playing","height","width","handleThumbnailClicked","bind","sh","window","innerHeight","sw","innerWidth","e","videoHeight","videoWidth","style","video","currentTarget","viewportDimensions","getScreenDimensions","mobile","position","top","left","margin","backgroundColor","zIndex","transform","setState","preS","play","pause","src","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Gallery from \"./gallery\";\n\nexport default class VideoThumb extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\texpanded: false,\n\t\t\tplaying: false,\n\t\t\theight: 100,\n\t\t\twidth: 300\n\t\t};\n\t\tthis.handleThumbnailClicked = this.handleThumbnailClicked.bind(this);\n\t}\n\n\tgetScreenDimensions() {\n\t\tlet sh = window.innerHeight;\n\t\tlet sw = window.innerWidth;\n\t\treturn { height: sh, width: sw };\n\t}\n\n\thandleThumbnailClicked(e) {\n\t\tlet videoHeight;\n\t\tlet videoWidth;\n\t\tlet style;\n\t\tconst video = e.currentTarget;\n\n\t\tif (!this.state.expanded) {\n\t\t\tconst viewportDimensions = this.getScreenDimensions();\n\n\t\t\tlet mobile = viewportDimensions[\"width\"] <= 418;\n\n\t\t\tvideoWidth = mobile\n\t\t\t\t? viewportDimensions[\"height\"]\n\t\t\t\t: viewportDimensions[\"width\"] * 0.8;\n\t\t\tvideoHeight = mobile ? \"\" : videoWidth / 1.7;\n\n\t\t\tstyle = {\n\t\t\t\tposition: \"fixed\",\n\t\t\t\ttop: viewportDimensions,\n\t\t\t\tleft: \"10vw\",\n\t\t\t\tmargin: 0,\n\t\t\t\tbackgroundColor: \"grey\",\n\t\t\t\tzIndex: 10000,\n\t\t\t\ttransform: mobile ? \"rotation(90deg)\" : \"\"\n\t\t\t};\n\t\t} else {\n\t\t\tvideoWidth = 300;\n\t\t\tvideoHeight = 100;\n\n\t\t\tstyle = {};\n\t\t}\n\n\t\tthis.setState(\n\t\t\tpreS => {\n\t\t\t\treturn {\n\t\t\t\t\texpanded: !preS.expanded,\n\t\t\t\t\tplaying: !preS.playing,\n\t\t\t\t\tstyle: style,\n\t\t\t\t\theight: videoHeight,\n\t\t\t\t\twidth: videoWidth\n\t\t\t\t};\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.state.playing ? video.play() : video.pause();\n\t\t\t}\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"column has-shadow\">\n\t\t\t\t<video\n\t\t\t\t\tclassName={this.state.expanded ? \"is-overlay\" : \"media\"}\n\t\t\t\t\theight={this.state.height}\n\t\t\t\t\twidth={this.state.width}\n\t\t\t\t\tstyle={this.state.style}\n\t\t\t\t\tonClick={e => this.handleThumbnailClicked(e)}\n\t\t\t\t>\n\t\t\t\t\t<source src={this.props.src} type=\"video/mp4\" />\n\t\t\t\t</video>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}