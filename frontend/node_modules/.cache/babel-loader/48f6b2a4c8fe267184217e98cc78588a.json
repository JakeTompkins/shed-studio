{"ast":null,"code":"import _classCallCheck from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jake/code/Shed Studio/frontend/src/app/components/sideBarItem.js\";\nimport React from \"react\";\nvar linkStyle = {\n  fontSize: \"1.5em\",\n  textDecoration: \"none\"\n};\nvar sideBarItemStyle = {\n  display: \"flex\",\n  flexDirection: \"column\"\n};\n\nvar SideBarItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SideBarItem, _React$Component);\n\n  function SideBarItem(props) {\n    var _this;\n\n    _classCallCheck(this, SideBarItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SideBarItem).call(this, props));\n    _this.convertedTitle = _this.convertTitle(props.title);\n    _this.state = {\n      color: \"white\",\n      scaleUp: false\n    };\n    _this.determineStyle = _this.determineStyle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SideBarItem, [{\n    key: \"convertTitle\",\n    value: function convertTitle(title) {\n      return title.replace(\" \", \"-\");\n    }\n  }, {\n    key: \"determineStyle\",\n    value: function determineStyle() {\n      if (this.state.scaleUp) {\n        return {\n          width: \"1.25em\",\n          height: \".75em\"\n        };\n      } else {\n        return {\n          width: \"1em\",\n          height: \".25em\"\n        };\n      }\n    }\n  }, {\n    key: \"handlescroll\",\n    value: function handlescroll() {\n      var me = document.getElementById(this.props.title);\n      var bottom = me.getBoundingClientRect().bottom;\n\n      if (bottom > this.props.threshold) {\n        this.setState(function (oldState) {\n          if (oldState.color === \"white\") {\n            return {\n              color: \"black\"\n            };\n          }\n        });\n      } else {\n        this.setState(function (oldState) {\n          if (oldState.color === \"black\") {\n            return {\n              color: \"white\"\n            };\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      window.addEventListener(\"scroll\", this.handlescroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"hit\");\n      return React.createElement(\"div\", {\n        className: \"sideBarItem\",\n        id: this.convertedTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"sideBarItem-title\",\n        href: \"#\".concat(this.props.title, \"Marker\"),\n        style: linkStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"svg\", {\n        style: {\n          width: \"25\",\n          height: \"25\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"rect\", {\n        style: this.determineStyle(),\n        fill: this.state.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), \"Sorry, your browser does not support inline SVG.\"));\n    }\n  }]);\n\n  return SideBarItem;\n}(React.Component);\n\nexport { SideBarItem as default };","map":{"version":3,"sources":["/Users/jake/code/Shed Studio/frontend/src/app/components/sideBarItem.js"],"names":["React","linkStyle","fontSize","textDecoration","sideBarItemStyle","display","flexDirection","SideBarItem","props","convertedTitle","convertTitle","title","state","color","scaleUp","determineStyle","bind","replace","width","height","me","document","getElementById","bottom","getBoundingClientRect","threshold","setState","oldState","window","addEventListener","handlescroll","console","log","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,SAAS,GAAG;AACjBC,EAAAA,QAAQ,EAAE,OADO;AAEjBC,EAAAA,cAAc,EAAE;AAFC,CAAlB;AAKA,IAAMC,gBAAgB,GAAG;AACxBC,EAAAA,OAAO,EAAE,MADe;AAExBC,EAAAA,aAAa,EAAE;AAFS,CAAzB;;IAKqBC,W;;;;;AACpB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,qFAAMA,KAAN;AACA,UAAKC,cAAL,GAAsB,MAAKC,YAAL,CAAkBF,KAAK,CAACG,KAAxB,CAAtB;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE,OADK;AAEZC,MAAAA,OAAO,EAAE;AAFG,KAAb;AAKA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AARkB;AASlB;;;;iCAEYL,K,EAAO;AACnB,aAAOA,KAAK,CAACM,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAP;AACA;;;qCAEgB;AAChB,UAAI,KAAKL,KAAL,CAAWE,OAAf,EAAwB;AACvB,eAAO;AACNI,UAAAA,KAAK,EAAE,QADD;AAENC,UAAAA,MAAM,EAAE;AAFF,SAAP;AAIA,OALD,MAKO;AACN,eAAO;AACND,UAAAA,KAAK,EAAE,KADD;AAENC,UAAAA,MAAM,EAAE;AAFF,SAAP;AAIA;AACD;;;mCAEc;AACd,UAAMC,EAAE,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAKd,KAAL,CAAWG,KAAnC,CAAX;AACA,UAAMY,MAAM,GAAGH,EAAE,CAACI,qBAAH,GAA2BD,MAA1C;;AAEA,UAAIA,MAAM,GAAG,KAAKf,KAAL,CAAWiB,SAAxB,EAAmC;AAClC,aAAKC,QAAL,CAAc,UAAAC,QAAQ,EAAI;AACzB,cAAIA,QAAQ,CAACd,KAAT,KAAmB,OAAvB,EAAgC;AAC/B,mBAAO;AAAEA,cAAAA,KAAK,EAAE;AAAT,aAAP;AACA;AACD,SAJD;AAKA,OAND,MAMO;AACN,aAAKa,QAAL,CAAc,UAAAC,QAAQ,EAAI;AACzB,cAAIA,QAAQ,CAACd,KAAT,KAAmB,OAAvB,EAAgC;AAC/B,mBAAO;AAAEA,cAAAA,KAAK,EAAE;AAAT,aAAP;AACA;AACD,SAJD;AAKA;AACD;;;yCAEoB;AACpBe,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,YAAvC;AACA;;;6BAEQ;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,aACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,EAAE,EAAE,KAAKvB,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AACC,QAAA,SAAS,EAAC,mBADX;AAEC,QAAA,IAAI,aAAM,KAAKD,KAAL,CAAWG,KAAjB,WAFL;AAGC,QAAA,KAAK,EAAEV,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,KAAKO,KAAL,CAAWG,KALb,CADD,EAQC;AAAK,QAAA,KAAK,EAAE;AAAEO,UAAAA,KAAK,EAAE,IAAT;AAAeC,UAAAA,MAAM,EAAE;AAAvB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAM,QAAA,KAAK,EAAE,KAAKJ,cAAL,EAAb;AAAoC,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,qDARD,CADD;AAeA;;;;EAtEuCb,KAAK,CAACiC,S;;SAA1B1B,W","sourcesContent":["import React from \"react\";\n\nconst linkStyle = {\n\tfontSize: \"1.5em\",\n\ttextDecoration: \"none\"\n};\n\nconst sideBarItemStyle = {\n\tdisplay: \"flex\",\n\tflexDirection: \"column\"\n};\n\nexport default class SideBarItem extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.convertedTitle = this.convertTitle(props.title);\n\t\tthis.state = {\n\t\t\tcolor: \"white\",\n\t\t\tscaleUp: false\n\t\t};\n\n\t\tthis.determineStyle = this.determineStyle.bind(this);\n\t}\n\n\tconvertTitle(title) {\n\t\treturn title.replace(\" \", \"-\");\n\t}\n\n\tdetermineStyle() {\n\t\tif (this.state.scaleUp) {\n\t\t\treturn {\n\t\t\t\twidth: \"1.25em\",\n\t\t\t\theight: \".75em\"\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\twidth: \"1em\",\n\t\t\t\theight: \".25em\"\n\t\t\t};\n\t\t}\n\t}\n\n\thandlescroll() {\n\t\tconst me = document.getElementById(this.props.title);\n\t\tconst bottom = me.getBoundingClientRect().bottom;\n\n\t\tif (bottom > this.props.threshold) {\n\t\t\tthis.setState(oldState => {\n\t\t\t\tif (oldState.color === \"white\") {\n\t\t\t\t\treturn { color: \"black\" };\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState(oldState => {\n\t\t\t\tif (oldState.color === \"black\") {\n\t\t\t\t\treturn { color: \"white\" };\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentWillMount() {\n\t\twindow.addEventListener(\"scroll\", this.handlescroll);\n\t}\n\n\trender() {\n\t\tconsole.log(\"hit\");\n\t\treturn (\n\t\t\t<div className=\"sideBarItem\" id={this.convertedTitle}>\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"sideBarItem-title\"\n\t\t\t\t\thref={`#${this.props.title}Marker`}\n\t\t\t\t\tstyle={linkStyle}\n\t\t\t\t>\n\t\t\t\t\t{this.props.title}\n\t\t\t\t</a>\n\t\t\t\t<svg style={{ width: \"25\", height: \"25\" }}>\n\t\t\t\t\t<rect style={this.determineStyle()} fill={this.state.color} />\n\t\t\t\t\tSorry, your browser does not support inline SVG.\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}