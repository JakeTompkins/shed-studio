{"ast":null,"code":"import _classCallCheck from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jake/code/Shed Studio/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jake/code/Shed Studio/frontend/src/app/components/videoThumb.js\";\nimport React from 'react';\nimport { withTheme } from '@material-ui/core/styles';\n\nvar VideoThumb =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VideoThumb, _React$Component);\n\n  function VideoThumb(props) {\n    var _this;\n\n    _classCallCheck(this, VideoThumb);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VideoThumb).call(this, props));\n    _this.state = {\n      expanded: false,\n      playing: false,\n      height: 100,\n      width: 300\n    };\n    _this.handleThumbnailClicked = _this.handleThumbnailClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(VideoThumb, [{\n    key: \"getScreenDimensions\",\n    value: function getScreenDimensions() {\n      var sh = window.innerHeight;\n      var sw = window.innerWidth;\n      return {\n        height: sh,\n        width: sw\n      };\n    }\n  }, {\n    key: \"handleThumbnailClicked\",\n    value: function handleThumbnailClicked(e) {\n      var _this2 = this;\n\n      var videoHeight;\n      var videoWidth;\n      var video = e.currentTarget;\n\n      if (!this.state.expanded) {\n        var viewportDimensions = this.getScreenDimensions();\n        videoWidth = viewportDimensions[\"width\"];\n        videoHeight = videoWidth / 1.7;\n      } else {\n        videoWidth = 300;\n        videoHeight = 100;\n      }\n\n      this.setState(function (preS) {\n        return {\n          expanded: !preS.expanded,\n          playing: !preS.playing,\n          height: videoHeight,\n          width: videoWidth\n        };\n      }, function () {\n        _this2.state.playing ? video.play() : video.pause();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"video\", {\n        id: \"\",\n        height: this.state.height,\n        width: this.state.width,\n        playing: this.state.playing,\n        onClick: function onClick(e) {\n          return _this3.handleThumbnailClicked(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: this.props.src,\n        type: \"video/mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return VideoThumb;\n}(React.Component);\n\nexport default withTheme()(VideoThumb);","map":{"version":3,"sources":["/Users/jake/code/Shed Studio/frontend/src/app/components/videoThumb.js"],"names":["React","withTheme","VideoThumb","props","state","expanded","playing","height","width","handleThumbnailClicked","bind","sh","window","innerHeight","sw","innerWidth","e","videoHeight","videoWidth","video","currentTarget","viewportDimensions","getScreenDimensions","setState","preS","play","pause","src","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,0BAA1B;;IAEMC,U;;;;;AAEF,sBAAYC,KAAZ,EACA;AAAA;;AAAA;;AACI,oFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,OAAO,EAAE,KAFA;AAGTC,MAAAA,MAAM,EAAE,GAHC;AAITC,MAAAA,KAAK,EAAE;AAJE,KAAb;AAMA,UAAKC,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BC,IAA5B,uDAA9B;AATJ;AAUC;;;;0CAGD;AACI,UAAIC,EAAE,GAAGC,MAAM,CAACC,WAAhB;AACA,UAAIC,EAAE,GAAGF,MAAM,CAACG,UAAhB;AACA,aAAO;AAACR,QAAAA,MAAM,EAAEI,EAAT;AAAaH,QAAAA,KAAK,EAAEM;AAApB,OAAP;AACH;;;2CAEsBE,C,EACvB;AAAA;;AACI,UAAIC,WAAJ;AACA,UAAIC,UAAJ;AACA,UAAMC,KAAK,GAAGH,CAAC,CAACI,aAAhB;;AAEA,UAAG,CAAC,KAAKhB,KAAL,CAAWC,QAAf,EACA;AACI,YAAMgB,kBAAkB,GAAG,KAAKC,mBAAL,EAA3B;AAGAJ,QAAAA,UAAU,GAAGG,kBAAkB,CAAC,OAAD,CAA/B;AACAJ,QAAAA,WAAW,GAAGC,UAAU,GAAC,GAAzB;AAEH,OARD,MASA;AACQA,QAAAA,UAAU,GAAG,GAAb;AACAD,QAAAA,WAAW,GAAG,GAAd;AACP;;AAED,WAAKM,QAAL,CAAc,UAACC,IAAD,EAAU;AACpB,eAAO;AACPnB,UAAAA,QAAQ,EAAE,CAACmB,IAAI,CAACnB,QADT;AAEPC,UAAAA,OAAO,EAAE,CAACkB,IAAI,CAAClB,OAFR;AAGPC,UAAAA,MAAM,EAAEU,WAHD;AAIPT,UAAAA,KAAK,EAAEU;AAJA,SAAP;AAMH,OAPD,EAOG,YAAM;AACL,QAAA,MAAI,CAACd,KAAL,CAAWE,OAAX,GAAqBa,KAAK,CAACM,IAAN,EAArB,GAAoCN,KAAK,CAACO,KAAN,EAApC;AACH,OATD;AAUH;;;6BAGD;AAAA;;AACI,aACA;AACA,QAAA,EAAE,EAAC,EADH;AAEA,QAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWG,MAFnB;AAGA,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,KAHlB;AAIA,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWE,OAJpB;AAKA,QAAA,OAAO,EAAE,iBAACU,CAAD;AAAA,iBAAO,MAAI,CAACP,sBAAL,CAA4BO,CAA5B,CAAP;AAAA,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI;AAAQ,QAAA,GAAG,EAAE,KAAKb,KAAL,CAAWwB,GAAxB;AAA6B,QAAA,IAAI,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADA;AAUH;;;;EAlEoB3B,KAAK,CAAC4B,S;;AAqE/B,eAAe3B,SAAS,GAAGC,UAAH,CAAxB","sourcesContent":["import React from 'react'\nimport { withTheme } from '@material-ui/core/styles'\n\nclass VideoThumb extends React.Component\n{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            expanded: false,\n            playing: false,\n            height: 100,\n            width: 300\n        }\n        this.handleThumbnailClicked = this.handleThumbnailClicked.bind(this)\n    }\n\n    getScreenDimensions()\n    {\n        let sh = window.innerHeight\n        let sw = window.innerWidth\n        return {height: sh, width: sw}\n    }\n\n    handleThumbnailClicked(e)\n    {\n        let videoHeight\n        let videoWidth\n        const video = e.currentTarget\n\n        if(!this.state.expanded)\n        {\n            const viewportDimensions = this.getScreenDimensions()\n\n\n            videoWidth = viewportDimensions[\"width\"]\n            videoHeight = videoWidth/1.7\n\n        } else\n        {\n                videoWidth = 300\n                videoHeight = 100\n        }\n\n        this.setState((preS) => {\n            return {\n            expanded: !preS.expanded,\n            playing: !preS.playing,\n            height: videoHeight,\n            width: videoWidth\n            }\n        }, () => {\n            this.state.playing ? video.play() : video.pause()\n        })\n    }\n\n    render()\n    {\n        return(\n        <video\n        id=\"\" \n        height={this.state.height} \n        width={this.state.width} \n        playing={this.state.playing} \n        onClick={(e) => this.handleThumbnailClicked(e)}>\n            <source src={this.props.src} type=\"video/mp4\" />\n        </video>\n        )\n    }\n}\n\nexport default withTheme()(VideoThumb)"]},"metadata":{},"sourceType":"module"}